trigger:
  - '*'
pr:
  - '*'
variables:
  - group: '<team>-databricks-token'

stages:
  - stage: DatabricksAssetBundleValidation
    jobs:
      - job: JobDeploymentPlan
        displayName: Databricks Asset Bundle deployment
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Bash@3
            displayName: Install databricks cli
            inputs:
              targetType: 'inline'
              script: |
                curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
                databricks version

          - task: Bash@3
            displayName: Validate bundle
            env:
              DATABRICKS_HOST: $(DATABRICKS_HOST)
              DATABRICKS_CLIENT_SECRET: $(DATABRICKS_CLIENT_SECRET)
              DATABRICKS_CLIENT_ID: $(DATABRICKS_CLIENT_ID)
            inputs:
              targetType: 'inline'
              script: |
                databricks bundle validate

          - task: Bash@3
            displayName: Deploy QA production pipelines
            condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
            env:
              DATABRICKS_HOST: $(DATABRICKS_HOST)
              DATABRICKS_CLIENT_SECRET: $(DATABRICKS_CLIENT_SECRET)
              DATABRICKS_CLIENT_ID: $(DATABRICKS_CLIENT_ID)
            inputs:
              targetType: 'inline'
              script: |
                databricks bundle deploy -t qa

          - task: Bash@3
            displayName: Deploy Live production pipelines
            condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
            env:
              DATABRICKS_HOST: $(DATABRICKS_HOST)
              DATABRICKS_CLIENT_SECRET: $(DATABRICKS_CLIENT_SECRET)
              DATABRICKS_CLIENT_ID: $(DATABRICKS_CLIENT_ID)
            inputs:
              targetType: 'inline'
              script: |
                databricks bundle deploy -t live
